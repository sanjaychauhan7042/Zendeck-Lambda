name: 'Main Deploy LB'
run-name: '${{github.actor}} - Deploy or Remove Load Balancer'

on:
  workflow_dispatch:
    inputs:
      requestType:
        type: string
        required: true
        description: 'Specify Create or Remove'
      location:
        type: string
        required: true
        description: 'Azure region for the Load Balancer'
      environment:
        type: string
        required: true
        description: 'Deployment environment (prod/uat/dev)'
      purpose:
        type: string
        required: true
        description: 'Purpose of the Load Balancer'
      frontend_ip_configuration:
        type: string
        required: true
        description: 'Frontend IP Configuration name'
      frontend_ip_address:
        type: string
        required: false
        description: 'Frontend IP address (optional)'

env:
  permissions:
    contents: read

jobs:
  deploy-lb:
    name: 'Deploy or Remove Load Balancer'
    env:
      ARM_CLIENT_ID:        ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET:    ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_TENANT_ID:        ${{secrets.AZURE_TENANT_ID}}
      ARM_SUBSCRIPTION_ID:  ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ROOT_PATH:            'Azure/Azure-LB'
    runs-on: 
      group: aks-runners
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: 'Azure/Azure-LB'

    steps:
      - name: 'Checkout - Load Balancer'
        uses: actions/checkout@v3

      - name: 'Setup Node.js'
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - id: envvars
        name: Set environment variables based on deployment environment
        run: |
          echo "BACKEND_STORAGE_ACCOUNT=${{ secrets.BACKEND_STORAGE_ACCOUNT }}" >> "$GITHUB_ENV"
          echo "BACKEND_RESOURCE_GROUP=${{ secrets.BACKEND_RESOURCE_GROUP }}" >> "$GITHUB_ENV"

      - name: 'Terraform Initialize - Load Balancer'
        run: terraform init -backend-config="resource_group_name=$BACKEND_RESOURCE_GROUP" -backend-config="storage_account_name=$BACKEND_STORAGE_ACCOUNT" -backend-config="container_name=terraform-state" -backend-config="key=${{ inputs.environment }}-${{ inputs.purpose }}-terraform.tfstate" -input=false
        env:
          TF_VAR_requesttype:                  '${{inputs.requestType}}'
          TF_VAR_location:                     '${{inputs.location}}'
          TF_VAR_environment:                  '${{inputs.environment}}'
          TF_VAR_purpose:                      '${{inputs.purpose}}'
          TF_VAR_frontend_ip_configuration:    '${{inputs.frontend_ip_configuration}}'
          TF_VAR_frontend_ip_address:          '${{inputs.frontend_ip_address}}'

      - name: 'Terraform Plan - Load Balancer'
        if: ${{ inputs.requestType == 'Create' }}
        run: terraform plan
        env:
          TF_VAR_requesttype:                  '${{inputs.requestType}}'
          TF_VAR_location:                     '${{inputs.location}}'
          TF_VAR_environment:                  '${{inputs.environment}}'
          TF_VAR_purpose:                      '${{inputs.purpose}}'
          TF_VAR_frontend_ip_configuration:    '${{inputs.frontend_ip_configuration}}'
          TF_VAR_frontend_ip_address:          '${{inputs.frontend_ip_address}}'

      - name: 'Terraform Apply - Load Balancer'
        if: ${{ inputs.requestType == 'Create' }}
        run: terraform apply -auto-approve
        env:
          TF_VAR_requesttype:                  '${{inputs.requestType}}'
          TF_VAR_location:                     '${{inputs.location}}'
          TF_VAR_environment:                  '${{inputs.environment}}'
          TF_VAR_purpose:                      '${{inputs.purpose}}'
          TF_VAR_frontend_ip_configuration:    '${{inputs.frontend_ip_configuration}}'
          TF_VAR_frontend_ip_address:          '${{inputs.frontend_ip_address}}'

      - name: 'Terraform Destroy - Load Balancer'
        if: ${{ inputs.requestType == 'Remove' }}
        run: terraform destroy -auto-approve
        env:
          TF_VAR_requesttype:                  '${{inputs.requestType}}'
          TF_VAR_location:                     '${{inputs.location}}'
          TF_VAR_environment:                  '${{inputs.environment}}'
          TF_VAR_purpose:                      '${{inputs.purpose}}'
          TF_VAR_frontend_ip_configuration:    '${{inputs.frontend_ip_configuration}}'
          TF_VAR_frontend_ip_address:          '${{inputs.frontend_ip_address}}'
